param(
    [string]$Url
)

# Zawartość plików .pem
$certContent = @"
-----BEGIN CERTIFICATE-----
(Tu wstaw zawartość certyfikatu z pliku .pem)
-----END CERTIFICATE-----
"@

$keyContent = @"
-----BEGIN PRIVATE KEY-----
(Tu wstaw zawartość klucza z pliku .pem)
-----END PRIVATE KEY-----
"@

# Tworzenie obiektu certyfikatu z zawartości .pem
$tempCertFile = [System.IO.Path]::GetTempFileName()
[System.IO.File]::WriteAllText($tempCertFile, $certContent + $keyContent)
$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
$cert.Import($tempCertFile)
Remove-Item -Path $tempCertFile -Force

function Get-DataFromUrl {
    param(
        [string]$Url,
        [System.Security.Cryptography.X509Certificates.X509Certificate2]$Cert
    )
    
    try {
        # Wywołanie usługi REST przy użyciu metody GET i certyfikatu
        $response = Invoke-RestMethod -Uri $Url -Method Get -Certificate $Cert
        
        # Wyświetlanie odpowiedzi
        Write-Output "Odpowiedź z serwera: $($response | ConvertTo-Json)"
    }
    catch {
        # Obsługa błędów i wyświetlanie wiadomości o błędzie
        Write-Error "Błąd: $_"
    }
}

# Wywołanie funkcji z przekazanym parametrem i certyfikatem
Get-DataFromUrl -Url $Url -Cert $cert
